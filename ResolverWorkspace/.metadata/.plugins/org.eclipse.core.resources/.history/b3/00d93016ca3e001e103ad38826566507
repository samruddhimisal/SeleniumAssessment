package TestCases;

import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.testng.annotations.Test;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import Utils.Utilities;

/*Use Cases to be covered
1. In the test 5 div, wait for a button to be displayed (note: the delay is random) and then click it
2. Once you've clicked the button, assert that a success message is displayed
3. Assert that the button is now disabled
*/

public class Test5 extends Utilities
{
	@Test
	public void verifyButtonMessage() throws Throwable
	{
		//Navigate to the home page
		navigateToHome();
		
		//Scroll to the Test5 form
		scrollToAForm(driver.findElement(By.xpath(prop.getProperty("h_test5Header"))));
		
		WebElement btn = driver.findElement(By.xpath(prop.getProperty("btn_primaryTest5Button")));
		//driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		btn.click();
		String successMessage = driver.findElement(By.xpath(prop.getProperty(("m_btnConfirmationMsg")))).getText();
		softAssert.assertEquals(successMessage, "You clicked a button!");
		softAssert.assertEquals(false,btn.isDisplayed(), "The button is not disabled.");
		
		// Explicitly wait for the button to be displayed with the random delay
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
        WebElement button = wait.until(ExpectedConditions.visibilityOf(btn));
  
//		Wait<WebDriver> wait = new WebDriverWait(driver, Duration.ofSeconds(2));
//        wait.until(d -> btn.isDisplayed());
//        btn.click();

	}
	
	
}
